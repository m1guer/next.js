[
    Unreachable {
        start_ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    1,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Return,
            ),
        ],
    },
    Conditional {
        condition: Not(
            2,
            Variable(
                (
                    "lasyInitAsyncValue",
                    #2,
                ),
            ),
        ),
        kind: If {
            then: EffectsBlock {
                effects: [
                    Call {
                        func: Variable(
                            (
                                "computeAsyncValue",
                                #2,
                            ),
                        ),
                        args: [],
                        ast_path: [
                            Program(
                                Module,
                            ),
                            Module(
                                Body(
                                    2,
                                ),
                            ),
                            ModuleItem(
                                ModuleDecl,
                            ),
                            ModuleDecl(
                                ExportDecl,
                            ),
                            ExportDecl(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Assign,
                            ),
                            AssignExpr(
                                Right,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: 383..402,
                        in_try: false,
                        new: false,
                    },
                ],
                range: Exact(
                    [
                        Program(
                            Module,
                        ),
                        Module(
                            Body(
                                2,
                            ),
                        ),
                        ModuleItem(
                            ModuleDecl,
                        ),
                        ModuleDecl(
                            ExportDecl,
                        ),
                        ExportDecl(
                            Decl,
                        ),
                        Decl(
                            Fn,
                        ),
                        FnDecl(
                            Function,
                        ),
                        Function(
                            Body,
                        ),
                        BlockStmt(
                            Stmts(
                                0,
                            ),
                        ),
                        Stmt(
                            If,
                        ),
                        IfStmt(
                            Cons,
                        ),
                    ],
                ),
            },
        },
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    2,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDecl,
            ),
            ExportDecl(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: 331..407,
    },
    Unreachable {
        start_ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    2,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDecl,
            ),
            ExportDecl(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
        ],
    },
    Member {
        obj: FreeVar(
            "console",
        ),
        prop: Constant(
            Str(
                Atom(
                    "log",
                ),
            ),
        ),
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: 555..566,
    },
    FreeVar {
        var: "console",
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Ident,
            ),
        ],
        span: 555..562,
    },
    MemberCall {
        obj: FreeVar(
            "console",
        ),
        prop: Constant(
            Str(
                Atom(
                    "log",
                ),
            ),
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Atom(
                            "initLasyInitAsyncProcess",
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: 555..594,
        in_try: false,
        new: false,
    },
    Conditional {
        condition: Not(
            2,
            Variable(
                (
                    "lasyInitAsyncProcess",
                    #2,
                ),
            ),
        ),
        kind: If {
            then: EffectsBlock {
                effects: [
                    Call {
                        func: Variable(
                            (
                                "initLasyInitAsyncProcess",
                                #2,
                            ),
                        ),
                        args: [],
                        ast_path: [
                            Program(
                                Module,
                            ),
                            Module(
                                Body(
                                    5,
                                ),
                            ),
                            ModuleItem(
                                ModuleDecl,
                            ),
                            ModuleDecl(
                                ExportDecl,
                            ),
                            ExportDecl(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Assign,
                            ),
                            AssignExpr(
                                Right,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: 703..729,
                        in_try: false,
                        new: false,
                    },
                ],
                range: Exact(
                    [
                        Program(
                            Module,
                        ),
                        Module(
                            Body(
                                5,
                            ),
                        ),
                        ModuleItem(
                            ModuleDecl,
                        ),
                        ModuleDecl(
                            ExportDecl,
                        ),
                        ExportDecl(
                            Decl,
                        ),
                        Decl(
                            Fn,
                        ),
                        FnDecl(
                            Function,
                        ),
                        Function(
                            Body,
                        ),
                        BlockStmt(
                            Stmts(
                                0,
                            ),
                        ),
                        Stmt(
                            If,
                        ),
                        IfStmt(
                            Cons,
                        ),
                    ],
                ),
            },
        },
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    5,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDecl,
            ),
            ExportDecl(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: 647..734,
    },
    Unreachable {
        start_ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    5,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDecl,
            ),
            ExportDecl(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
        ],
    },
]
