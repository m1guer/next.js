binPath = (???*0* | FreeVar(require)["resolve"](`${pkg}/${subpath}`))
- *0* binPath
  ⚠️  pattern without value

e = ???*0*
- *0* e
  ⚠️  pattern without value

generateBinPath (const after eval) = (...) => binPath

knownWindowsPackages (const after eval) = {
    "win32 arm64 LE": "esbuild-windows-arm64",
    "win32 ia32 LE": "esbuild-windows-32",
    "win32 x64 LE": "esbuild-windows-64"
}

path (const after eval) = FreeVar(require)("path")

path2 (const after eval) = FreeVar(require)("path")

pkg#3 = (???*0* | knownWindowsPackages[FreeVar(platformKey)])
- *0* pkg
  ⚠️  pattern without value

pkg#4 = pkgAndSubpathForCurrentPlatform()["pkg"]

pkgAndSubpathForCurrentPlatform (const after eval) = (...) => {"pkg": pkg, "subpath": subpath}

subpath#3 = (???*0* | "esbuild.exe")
- *0* subpath
  ⚠️  pattern without value

subpath#4 = pkgAndSubpathForCurrentPlatform()["subpath"]

x (const after eval) = generateBinPath()
